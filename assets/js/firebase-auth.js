window.addEventListener("DOMContentLoaded", () => {
  // ‚ú® Citations en rotation
  const citations = [
    "¬´ Ce que vous entendrez aujourd‚Äôhui, ce ne sont pas des voix‚Ä¶ Ce sont des √¢mes en pri√®re. ¬ª",
    "¬´ Chaque note est un souffle, chaque silence est un battement du c≈ìur collectif. ¬ª",
    "¬´ L'art sacr√© est une pri√®re que l'on partage sans mot. ¬ª"
  ];
  let index = 0;
  const cible = document.getElementById("citation-dynamique");
  if (cible) {
    cible.textContent = citations[index];
    setInterval(() => {
      index = (index + 1) % citations.length;
      cible.textContent = citations[index];
    }, 6000);
  }

  // üîê Gestion Firebase Auth
  const emailInput = document.getElementById("email");
  const passwordInput = document.getElementById("password");
  const userInfo = document.getElementById("user-info");
  const uploadZone = document.getElementById("upload-zone");
  const gallery = document.getElementById("media-gallery");

  function updateUI(user) {
    if (user) {
      document.querySelector("h2").textContent = `Bienvenue ${user.email}`;
      uploadZone.style.display = "block";
      gallery.innerHTML = "<p class='text-muted'>Vos fichiers s'afficheront ici...</p>";
      userInfo.textContent = `Connect√© en tant que : ${user.email}`;
    } else {
      document.querySelector("h2").textContent = "Espace membre ‚Äî C.A.S.T.";
      uploadZone.style.display = "none";
      gallery.innerHTML = "";
      userInfo.textContent = "";
    }
  }

  // ‚úÖ Version douce : pas de redirection automatique
  firebase.auth().onAuthStateChanged((user) => {
    updateUI(user);
    if (!user) {
      alert("üîê Vous devez vous connecter pour acc√©der √† l‚Äôespace membre.");
      // On reste sur le dashboard, le formulaire est visible
    }
  });

  document.getElementById("signup").addEventListener("click", () => {
    const email = emailInput.value;
    const password = passwordInput.value;
    firebase.auth().createUserWithEmailAndPassword(email, password)
      .then((userCredential) => {
        alert("üéâ Compte cr√©√© !");
        updateUI(userCredential.user);
      })
      .catch(error => alert("Erreur : " + error.message));
  });

  document.getElementById("login").addEventListener("click", () => {
    const email = emailInput.value;
    const password = passwordInput.value;
    firebase.auth().signInWithEmailAndPassword(email, password)
      .then((userCredential) => {
        alert("‚úÖ Connect√© !");
        updateUI(userCredential.user);
      })
      .catch(error => alert("Erreur : " + error.message));
  });

  document.getElementById("logout").addEventListener("click", () => {
    firebase.auth().signOut()
      .then(() => {
        alert("üëã D√©connect√© !");
        updateUI(null);
      });
  });

  // üìÇ Aper√ßu des fichiers upload√©s
  document.getElementById("fileInput").addEventListener("change", function (event) {
    gallery.innerHTML = "";
    Array.from(event.target.files).forEach(file => {
      const fileURL = URL.createObjectURL(file);
      const fileType = file.type;
      let preview = "";

      if (fileType.startsWith("image/")) {
        preview = `<img src="${fileURL}" class="img-fluid rounded" alt="${file.name}">`;
      } else if (fileType.startsWith("audio/")) {
        preview = `<audio controls src="${fileURL}" class="w-100"></audio>`;
      } else if (fileType.startsWith("video/")) {
        preview = `<video controls src="${fileURL}" class="w-100 rounded"></video>`;
      } else {
        preview = `<p>üìÑ Fichier non pris en charge : ${file.name}</p>`;
      }

      const col = document.createElement("div");
      col.className = "col-md-4";
      col.innerHTML = preview;
      gallery.appendChild(col);
    });
  });
});
document.getElementById("btn-nouveau").addEventListener("click", () => {
  document.getElementById("signup").style.display = "inline-block";
  document.getElementById("login").style.display = "none";
  document.getElementById("email").style.display = "block";
  document.getElementById("password").style.display = "block";
});

document.getElementById("btn-deja").addEventListener("click", () => {
  document.getElementById("login").style.display = "inline-block";
  document.getElementById("signup").style.display = "none";
  document.getElementById("email").style.display = "block";
  document.getElementById("password").style.display = "block";
});
document.getElementById("btn-nouveau").addEventListener("click", () => {
  document.getElementById("signup").style.display = "inline-block";
  document.getElementById("login").style.display = "none";
  document.getElementById("email").style.display = "block";
  document.getElementById("password").style.display = "block";
});

document.getElementById("btn-deja").addEventListener("click", () => {
  document.getElementById("login").style.display = "inline-block";
  document.getElementById("signup").style.display = "none";
  document.getElementById("email").style.display = "block";
  document.getElementById("password").style.display = "block";
});
const signupForm = document.getElementById("signup-form");

if (signupForm) {
  signupForm.addEventListener("submit", (e) => {
    e.preventDefault();

    const lastname = signupForm.lastname.value.trim();
    const firstname = signupForm.firstname.value.trim();
    const religion = signupForm.religion.value.trim();
    const address = signupForm.address.value.trim();
    const email = signupForm.email.value.trim();
    const confirmEmail = signupForm["confirm-email"].value.trim();
    const password = signupForm.password.value;
    const confirmPassword = signupForm["confirm-password"].value;

    if (email !== confirmEmail) {
      alert("‚ùå Les adresses e-mail ne correspondent pas.");
      return;
    }

    if (password !== confirmPassword) {
      alert("‚ùå Les mots de passe ne correspondent pas.");
      return;
    }

    firebase.auth().createUserWithEmailAndPassword(email, password)
      .then((userCredential) => {
        alert("üéâ Compte cr√©√© !");
        window.location.href = "espace-membre.html";
        // üëâ Ajouter Firestore ici pour enregistrer les infos compl√©mentaires
      })
      .catch(error => alert("Erreur : " + error.message));
  });
}

// üîó S‚Äôinscrire via Google
const googleSignupBtn = document.getElementById("google-signup");
const googleProvider = new firebase.auth.GoogleAuthProvider();

if (googleSignupBtn) {
  googleSignupBtn.addEventListener("click", () => {
    firebase.auth().signInWithPopup(googleProvider)
      .then((result) => {
        alert("üéâ Compte Google cr√©√© !");
        window.location.href = "espace-membre.html";
        // üëâ Ajouter Firestore ici pour stocker donn√©es Google si besoin
      })
      .catch((error) => {
        alert("Erreur Google : " + error.message);
      });
  });
}const signupForm = document.getElementById("signup-form");

if (signupForm) {
  signupForm.addEventListener("submit", (e) => {
    e.preventDefault();

    const lastname = signupForm.lastname.value.trim();
    const firstname = signupForm.firstname.value.trim();
    const religion = signupForm.religion.value.trim();
    const address = signupForm.address.value.trim();
    const email = signupForm.email.value.trim();
    const confirmEmail = signupForm["confirm-email"].value.trim();
    const password = signupForm.password.value;
    const confirmPassword = signupForm["confirm-password"].value;

    if (email !== confirmEmail) {
      alert("‚ùå Les adresses e-mail ne correspondent pas.");
      return;
    }

    if (password !== confirmPassword) {
      alert("‚ùå Les mots de passe ne correspondent pas.");
      return;
    }

    firebase.auth().createUserWithEmailAndPassword(email, password)
      .then((userCredential) => {
        alert("üéâ Compte cr√©√© !");
        window.location.href = "espace-membre.html";
        // üëâ Stocker les infos suppl√©mentaires dans Firestore (optionnel)
      })
      .catch(error => alert("Erreur : " + error.message));
  });
}

// üîó Inscription via Google
const googleSignupBtn = document.getElementById("google-signup");
const googleProvider = new firebase.auth.GoogleAuthProvider();

if (googleSignupBtn) {
  googleSignupBtn.addEventListener("click", () => {
    firebase.auth().signInWithPopup(googleProvider)
      .then((result) => {
        alert("üéâ Compte Google cr√©√© !");
        window.location.href = "espace-membre.html";
        // üëâ Stocker les infos Google dans Firestore (optionnel)
      })
      .catch((error) => {
        alert("Erreur Google : " + error.message);
      });
  });
}
// Connexion avec Google
document.getElementById('login-google').addEventListener('click', () => {
  const provider = new firebase.auth.GoogleAuthProvider();
  firebase.auth().signInWithPopup(provider)
    .then(result => {
      console.log('Connect√© avec Google:', result.user);
    })
    .catch(error => {
      console.error('Erreur Google:', error);
    });
});

// Connexion avec Facebook
document.getElementById('login-facebook').addEventListener('click', () => {
  const provider = new firebase.auth.FacebookAuthProvider();
  firebase.auth().signInWithPopup(provider)
    .then(result => {
      console.log('Connect√© avec Facebook:', result.user);
    })
    .catch(error => {
      console.error('Erreur Facebook:', error);
    });
});